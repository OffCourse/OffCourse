{"version":3,"file":"index.js","sources":["../src/useAnimationFrame.ts","../src/useAppState/machine.ts","../src/useAppState/index.ts","../src/useInterval.ts","../src/useCycleItems.ts","../src/useCanvas.ts","../src/useGridCanvas.ts","../src/useComputationWorker.ts","../src/useAnimatedGridCanvas/index.ts","../src/useShowTab.tsx"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\n\nconst useAnimationFrame: (args: {\n  callback: (time: number) => void;\n  delay: number;\n}) => void = ({ callback, delay = 0 }) => {\n  const requestRef = useRef<null | number>(null);\n  const previousTimeRef = useRef<null | number>(null);\n\n  const animate: (time: number) => void = useCallback(\n    time => {\n      if (previousTimeRef.current !== null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (deltaTime > delay) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        previousTimeRef.current = time;\n      }\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    [delay, callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current || 0);\n  }, [callback, animate]);\n};\n\nexport default useAnimationFrame;\n","import { Machine } from \"xstate\";\n\nconst toggleMachine = Machine({\n  id: \"toggle\",\n  initial: \"default\",\n  states: {\n    default: {\n      on: { TOGGLE: \"menuOpen\" }\n    },\n    menuOpen: {\n      on: { TOGGLE: \"default\" }\n    }\n  }\n});\n\nexport default toggleMachine;\n","import { useCallback } from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport machine from \"./machine\";\nimport { ISiteMetaData } from \"@offcourse/interfaces/src/pages\";\nimport { StateValue } from \"xstate\";\n\nconst useAppState: (args: {\n  siteMetaData: ISiteMetaData;\n}) => {\n  appMode: StateValue;\n  siteMetaData: ISiteMetaData;\n  toggleMenu: () => void;\n} = ({ siteMetaData: smd }) => {\n  const [current, send] = useMachine(machine);\n  const toggleMode = useCallback(() => send(\"TOGGLE\"), [send]);\n  const links = smd.links.filter(({ title }) => title !== \"home\");\n  return {\n    appMode: current.value,\n    toggleMenu: toggleMode,\n    siteMetaData: { ...smd, links }\n  };\n};\n\nexport default useAppState;\n","import { useRef, useEffect } from \"react\";\n\ntype Callback = (args?: any) => void;\n\nconst useInterval: (callback: Callback, delay: number) => void = (\n  callback,\n  delay\n) => {\n  const savedCallback = useRef<Callback>();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return;\n  }, [delay]);\n};\n\nexport default useInterval;\n","import { useState } from \"react\";\nimport useInterval from \"./useInterval\";\nimport { IIndexable } from \"@offcourse/interfaces/src\";\n\ninterface ICarouselProps<T extends IIndexable> {\n  items: T[];\n  delay?: number;\n  visibleItems: number;\n}\n\nconst useCycleItems: <T extends IIndexable>(\n  props: ICarouselProps<T>\n) => any[] = ({ items, visibleItems, delay = 2000 }) => {\n  const [index, setIndex] = useState(0);\n  const goUp = (itemIndex: number) => setIndex(itemIndex + 1);\n  const goDown = (itemIndex: number) => setIndex(itemIndex - 1);\n\n  const [direction, setDirection] = useState(\"UP\");\n\n  const orderedProjects = [...items].map((item, itemIndex) => ({\n    ...item,\n    index: itemIndex\n  }));\n  useInterval(() => {\n    let next = null;\n    if (direction === \"UP\") {\n      next = goUp;\n      const reachedBeginning =\n        index >= orderedProjects.length - (visibleItems + 1);\n      if (reachedBeginning) {\n        setDirection(\"DOWN\");\n      }\n    } else {\n      next = goDown;\n      const reachedEnd = index <= 1;\n      if (reachedEnd) {\n        setDirection(\"UP\");\n      }\n    }\n    next(index);\n  }, delay);\n\n  return [index, orderedProjects];\n};\n\nexport default useCycleItems;\n","import { useEffect, useRef, RefObject } from \"react\";\n\ntype useCanvas = (args: {\n  width: number;\n  height: number;\n  draw: (args: CanvasRenderingContext2D) => void;\n}) => RefObject<HTMLCanvasElement>;\n\nconst useCanvas: useCanvas = ({ width, height, draw }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n        draw(ctx);\n      }\n    }\n  }, [canvasRef, width, height, draw]);\n  return canvasRef;\n};\n\nexport default useCanvas;\n\n","import { useCallback, RefObject } from \"react\";\nimport useCanvas from \"./useCanvas\";\n// @ts-ignore\nimport workerFn from \"../../workers/grid.worker\";\n\nconst useGridCanvas: (args: any) => RefObject<HTMLCanvasElement> = ({\n  width,\n  height,\n  colors,\n  shape,\n  grid\n}) => {\n  const draw = useCallback(\n    (ctx: CanvasRenderingContext2D) => {\n      ctx.clearRect(0, 0, width, height);\n      for (const { u, v, width: w, height: h, value } of grid) {\n        const x = u * width;\n        const y = v * height;\n        shape({\n          ctx,\n          x,\n          y,\n          value,\n          colors,\n          width: Math.ceil(w * width),\n          height: Math.ceil(h * height)\n        });\n      }\n    },\n    [width, height, grid, colors, shape]\n  );\n\n  return useCanvas({ width, height, draw });\n};\n\nexport default useGridCanvas;\n\n","import { useState, useEffect, useRef } from \"react\";\n\nconst useComputationWorker = (functionAsString: string) => {\n  const [elements, setElements] = useState<any>([]);\n  const workerRef = useRef<Worker | null>(null);\n\n  useEffect(() => {\n    const blob = new Blob([functionAsString]);\n    const blobURL = window.URL.createObjectURL(blob);\n\n    if (!workerRef.current) {\n      workerRef.current = new Worker(blobURL);\n    }\n    workerRef.current.onmessage = (e: any) => {\n      setElements(JSON.parse(e.data));\n    };\n  }, [functionAsString]);\n  return [elements, workerRef.current];\n};\n\nexport default useComputationWorker;\n","import { useCallback, RefObject } from \"react\";\nimport useGridCanvas from \"../useGridCanvas\";\nimport useAnimationFrame from \"../useAnimationFrame\";\nimport useComputationWorker from \"../useComputationWorker\";\nimport { IDimensions, Shape } from \"@offcourse/interfaces/src\"; // @ts-ignore\n// @ts-ignore\nimport workerFn from \"../../workers/grid.worker\";\n\ntype CanvasProps = IDimensions & {\n  shape: Shape;\n  colors: string[];\n  unitSize: number;\n};\n\nconst useAnimatedGridCanvas: (\n  args: CanvasProps\n) => RefObject<HTMLCanvasElement> = ({\n  width,\n  height,\n  unitSize,\n  colors,\n  shape\n}) => {\n  const [grid, elementsWorker] = useComputationWorker(workerFn);\n\n  const callback = useCallback(\n    (frame: number) => {\n      if (elementsWorker) {\n        const payload = JSON.stringify({\n          frame,\n          numberOfElements: 1000,\n          unitSize,\n          width,\n          height\n        });\n        elementsWorker.postMessage(payload);\n      }\n    },\n    [unitSize, width, height, elementsWorker]\n  );\n\n  useAnimationFrame({ callback, delay: 1000 });\n\n  return useGridCanvas({ width, shape, unitSize, grid, colors, height });\n};\n\nexport default useAnimatedGridCanvas;\n","import { useState } from \"react\";\nconst useShowTab: () => [boolean, (args: any) => void] = () => {\n  const [isVisible, setVisibility] = useState(true);\n\n  const handlePositionChange: (args: { currentPosition: string }) => void = ({\n    currentPosition\n  }) => {\n    setVisibility(currentPosition !== \"inside\" ? true : false);\n  };\n\n  return [isVisible, handlePositionChange];\n};\n\n\nexport default useShowTab;\n"],"names":["useRef","useCallback","useEffect","Machine","useMachine","machine","useState"],"mappings":"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"}