{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/rush.schema.json",
  "rushVersion": "5.9.1",
  "pnpmVersion": "3.5.3",
  "pnpmOptions": {
    "strictPeerDependencies": true
    // "resolutionStrategy": "fast"
  },

  "nodeSupportedVersionRange": ">=10.13.0 <11.0.0",
  "ensureConsistentVersions": true,
  "repository": {
    /**
     * The URL of this Git repository, used by "rush change" to determine the base branch for your PR.
     *
     * The "rush change" command needs to determine which files are affected by your PR diff.
     * If you merged or cherry-picked commits from the master branch into your PR branch, those commits
     * should be excluded from this diff (since they belong to some other PR).  In order to do that,
     * Rush needs to know where to find the base branch for your PR.  This information cannot be
     * determined from Git alone, since the "pull request" feature is not a Git concept.  Ideally
     * Rush would use a vendor-specific protocol to query the information from GitHub, Azure DevOps, etc.
     * But to keep things simple, "rush change" simply assumes that your PR is against the "master" branch
     * of the Git remote indicated by the respository.url setting in rush.json.  If you are working in
     * a GitHub "fork" of the real repo, this setting will be different from the repository URL of your
     * your PR branch, and in this situation "rush change" will also automatically invoke "git fetch"
     * to retrieve the latest activity for the remote master branch.
     */
    "url": "git@github.com:OffCourse/offcourse.git"
  },
  "projects": [
    {
      "packageName": "@offcourse/types",
      "projectFolder": "types",
    },
    {
      "packageName": "@offcourse/themes",
      "projectFolder": "themes",
    }
  ]
}
