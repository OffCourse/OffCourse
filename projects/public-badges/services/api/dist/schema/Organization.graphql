enum OrganizationStatus {
  PENDING
  APPROVED
}

type DomainNameIdentity {
  domainName: URL!
}

union Identity = DomainNameIdentity

interface Organization {
  organizationId: GUID!
  status: OrganizationStatus!
  name: String!
  contact: Contact!
  admin: Contact!
  identity: Identity!
  urls: [URL]
}

input ContactInput{
  name: String!
  email: EmailAddress!
}

type Contact {
  name: String!
  email: EmailAddress!
}


type PendingOrganization implements Organization {
  organizationId: GUID!
  status: OrganizationStatus!
  name: String!
  contact: Contact!
  admin: Contact!
  identity: Identity!
  urls: [URL]
}

type ApprovedOrganization implements Organization {
  organizationId: GUID!
  status: OrganizationStatus!
  name: String!
  contact: Contact!
  admin: Contact!
  approvedBy: EmailAddress!
  approvedOn: String!
  identity: Identity!
  urls: [URL]
}

input OrganizationInput {
  name: String!
  contact: ContactInput!
  admin: ContactInput!
  domainName: URL!
}
