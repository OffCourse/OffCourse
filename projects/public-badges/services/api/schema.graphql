# schema {
#   query: Query
# }

# enum PublicBadgeName {
#   ZERO_BADGE
# }

# type OpenBadgeClassCriteria {
#   narrative: String
# }

# type IssuerVerification {
#   allowedOrigins: [String]
# }

# type Issuer {
#   id: ID
#   type: String
#   name: String
#   email: String
#   verification: IssuerVerification
# }

# type OpenBadgeClass {
#   type: String
#   id: ID
#   name: String!
#   tags: [String]
#   description: String
#   criteria: OpenBadgeClassCriteria!
# }

# type OpenBadgeArtifact {
#   json: String
#   yaml: String
#   js: OpenBadge
# }

# type OpenBadge {
#   id: ID
#   badgeClass: OpenBadgeClass
#   type: String
#   recipient: Recipient
#   issuedOn: String
#   expires: String
#   evidence: [Proof]
# }

# type Recipient {
#   type: String
#   identity: String
# }


# type BadgeScore {
#   accountable: Int
#   sovereign: Int
#   userCentric: Int
#   transparent: Int
#   open: Int
# }

# type Proof {
#   id: ID
#   name: String
#   genre: String
#   description: String
#   narrative: String
# }


# type Query {
#   getBadge(badgeId: ID): PublicBadge
#   getAllBadges: [PublicBadge]
# }

# type PublicBadge {
#   badgeId: ID
#   badgeClassId: ID
#   name: String!
#   tags: [String]
#   description: String
#   narrative: String
#   recipientId: ID
#   issuedOn: String
#   expires: String
# }
