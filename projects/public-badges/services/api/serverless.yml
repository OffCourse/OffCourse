service: public-badges

custom:
  registry_bucket: public-badges-registry-${opt:stage}
  api: public-badges.api
  save_organization: public-badges.save-organization
  approve_organization: public-badges.approve-organization
  update_registry_lookup: public-badges.update-registry-lookup

provider:
  name: aws
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.registry_bucket}/*"
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: "*"

functions:
  graphql:
    handler: dist/index.graphql
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
      - http:
          path: playground
          method: any
          cors: true
    environment:
      REGISTRY_BUCKET: ${self:custom.registry_bucket}
      HANDLER_NAME: ${self:custom.api}
  saveOrganization:
    handler: dist/index.saveOrganization
    events:
      - eventBridge:
          pattern:
            source:
              - ${self:custom.api}
              - ${self:custom.approve_organization}
            detail-type: 
             - ORGANIZATION_REGISTRATION_REQUESTED
             - ORGANIZATION_APPROVAL_ACCEPTED
    environment:
      REGISTRY_BUCKET: ${self:custom.registry_bucket}
      HANDLER_NAME: ${self:custom.save_organization}
  approveOrganization:
    handler: dist/index.approveOrganization
    events:
      - eventBridge:
          pattern:
            source:
              - ${self:custom.save_organization}
            detail-type:
              - ORGANIZATION_APPROVAL_REQUESTED
    environment:
      HANDLER_NAME: ${self:custom.approve_organization}
  updateRegistry:
    handler: dist/index.updateRegistry
    events:
      - s3: ${self:custom.registry_bucket}
    environment:
      HANDLER_NAME: ${self:custom.update_registry_lookup}
  echo:
    handler: dist/index.echo
    events:
      - eventBridge:
          pattern:
            source:
              - ${self:custom.save_organization}
            detail-type:
              - ORGANIZATION_APPROVED
    environment:
      HANDLER_NAME: public-badges.echo

resources:
  Resources:
    registryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: registry-lookup-${opt:stage}
        AttributeDefinitions:
          - AttributeName: organizationId
            AttributeType: S
          - AttributeName: identityType
            AttributeType: S
          - AttributeName: identityKey
            AttributeType: S
          - AttributeName: approvalStatus
            AttributeType: S
        KeySchema:
          - AttributeName: identityKey
            KeyType: HASH
          - AttributeName: identityType
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: organization-status-${opt:stage}
            KeySchema:
              - AttributeName: approvalStatus
                KeyType: HASH
              - AttributeName: organizationId
                KeyType: RANGE
            Projection:
              NonKeyAttributes: []
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
